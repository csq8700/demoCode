Imports System.Security.Cryptography

Public Class SessionIdGenerator
    Private Const SessionIdLength As Integer = 24 ' 24 characters

    Public Shared Function GenerateSessionId() As String
        ' Create a byte array to hold the random data
        Dim randomBytes(15) As Byte ' 16 bytes to get 24 base64 characters

        ' Use RNGCryptoServiceProvider to generate cryptographically strong random bytes
        Using rng As New RNGCryptoServiceProvider()
            rng.GetBytes(randomBytes)
        End Using

        ' Convert the byte array to a base64 string
        Dim sessionId As String = Convert.ToBase64String(randomBytes)

        ' Replace URL-unsafe characters
        sessionId = sessionId.Replace("+"c, "-"c).Replace("/"c, "_"c).TrimEnd("="c)

        ' Ensure the length of the sessionId is 24 characters
        If sessionId.Length > SessionIdLength Then
            sessionId = sessionId.Substring(0, SessionIdLength)
        ElseIf sessionId.Length < SessionIdLength Then
            sessionId = sessionId.PadRight(SessionIdLength, "0"c)
        End If

        Return sessionId
    End Function
End Class

Module Program
    Sub Main()
        Dim sessionId As String = SessionIdGenerator.GenerateSessionId()
        Console.WriteLine($"Generated SessionID: {sessionId}")
    End Sub
End Module